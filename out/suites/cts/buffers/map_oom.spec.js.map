{"version":3,"sources":["../../../../src/suites/cts/buffers/map_oom.spec.ts"],"names":["description","TestGroup","GPUTest","getBufferDesc","size","Number","MAX_SAFE_INTEGER","usage","GPUBufferUsage","MAP_WRITE","g","test","t","buffer","device","createBuffer","shouldReject","mapWriteAsync","mapReadAsync","shouldThrow","createBufferMapped","createBufferMappedAsync"],"mappings":";;;;AAAA,OAAO,MAAMA,WAAW,GAAI,EAArB;AAEP,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,OAAT,QAAwB,gBAAxB;;AAEA,SAASC,aAAT,GAA8C;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAEC,MAAM,CAACC,gBADR;AAELC,IAAAA,KAAK,EAAEC,cAAc,CAACC;AAFjB,GAAP;AAID;;AAED,OAAO,MAAMC,CAAC,GAAG,IAAIT,SAAJ,CAAcC,OAAd,CAAV;AAEPQ,CAAC,CAACC,IAAF,CAAO,eAAP,EAAwB,MAAMC,CAAN,IAAW;AACjC,QAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsBZ,aAAa,EAAnC,CAAf;AACA,QAAMS,CAAC,CAACI,YAAF,CAAe,YAAf,EAA6BH,MAAM,CAACI,aAAP,EAA7B,CAAN;AACD,CAHD;AAKAP,CAAC,CAACC,IAAF,CAAO,cAAP,EAAuB,MAAMC,CAAN,IAAW;AAChC,QAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsBZ,aAAa,EAAnC,CAAf;AACA,QAAMS,CAAC,CAACI,YAAF,CAAe,YAAf,EAA6BH,MAAM,CAACK,YAAP,EAA7B,CAAN;AACD,CAHD;AAKAR,CAAC,CAACC,IAAF,CAAO,oBAAP,EAA6B,MAAMC,CAAN,IAAW;AACtC,QAAMA,CAAC,CAACO,WAAF,CAAc,YAAd,EAA4B,MAAM;AACtCP,IAAAA,CAAC,CAACE,MAAF,CAASM,kBAAT,CAA4BjB,aAAa,EAAzC;AACD,GAFK,CAAN;AAGD,CAJD;AAMAO,CAAC,CAACC,IAAF,CAAO,mBAAP,EAA4B,MAAMC,CAAN,IAAW;AACrC,QAAMA,CAAC,CAACI,YAAF,CAAe,YAAf,EAA6BJ,CAAC,CAACE,MAAF,CAASO,uBAAT,CAAiClB,aAAa,EAA9C,CAA7B,CAAN;AACD,CAFD","sourcesContent":["export const description = ``;\n\nimport { TestGroup } from '../../../framework/index.js';\nimport { GPUTest } from '../gpu_test.js';\n\nfunction getBufferDesc(): GPUBufferDescriptor {\n  return {\n    size: Number.MAX_SAFE_INTEGER,\n    usage: GPUBufferUsage.MAP_WRITE,\n  };\n}\n\nexport const g = new TestGroup(GPUTest);\n\ng.test('mapWriteAsync', async t => {\n  const buffer = t.device.createBuffer(getBufferDesc());\n  await t.shouldReject('RangeError', buffer.mapWriteAsync());\n});\n\ng.test('mapReadAsync', async t => {\n  const buffer = t.device.createBuffer(getBufferDesc());\n  await t.shouldReject('RangeError', buffer.mapReadAsync());\n});\n\ng.test('createBufferMapped', async t => {\n  await t.shouldThrow('RangeError', () => {\n    t.device.createBufferMapped(getBufferDesc());\n  });\n});\n\ng.test('createBufferAsync', async t => {\n  await t.shouldReject('RangeError', t.device.createBufferMappedAsync(getBufferDesc()));\n});\n"],"file":"map_oom.spec.js"}