{"version":3,"sources":["../../../src/framework/params/index.ts"],"names":["paramsEquals","x","y","xk","Object","keys","hasOwnProperty","yk","paramsSupersets","sup","sub","k"],"mappings":";;;;AAAA,cAAc,cAAd;AACA,cAAc,aAAd;AACA,cAAc,cAAd;AACA,cAAc,cAAd;AAgBA,OAAO,SAASA,YAAT,CAAsBC,CAAtB,EAA4CC,CAA5C,EAA2E;AAChF,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AACD,MAAID,CAAC,KAAK,IAAN,IAAcC,CAAC,KAAK,IAAxB,EAA8B;AAC5B,WAAO,KAAP;AACD;;AAED,OAAK,MAAMC,EAAX,IAAiBC,MAAM,CAACC,IAAP,CAAYJ,CAAZ,CAAjB,EAAiC;AAC/B,QAAI,CAACC,CAAC,CAACI,cAAF,CAAiBH,EAAjB,CAAL,EAA2B;AACzB,aAAO,KAAP;AACD;;AACD,QAAIF,CAAC,CAACE,EAAD,CAAD,KAAUD,CAAC,CAACC,EAAD,CAAf,EAAqB;AACnB,aAAO,KAAP;AACD;AACF;;AAED,OAAK,MAAMI,EAAX,IAAiBH,MAAM,CAACC,IAAP,CAAYH,CAAZ,CAAjB,EAAiC;AAC/B,QAAI,CAACD,CAAC,CAACK,cAAF,CAAiBC,EAAjB,CAAL,EAA2B;AACzB,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAAiDC,GAAjD,EAAkF;AACvF,MAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChB,WAAO,IAAP;AACD;;AACD,MAAID,GAAG,KAAK,IAAZ,EAAkB;AAChB;AACA,WAAO,KAAP;AACD;;AACD,OAAK,MAAME,CAAX,IAAgBP,MAAM,CAACC,IAAP,CAAYK,GAAZ,CAAhB,EAAkC;AAChC,QAAI,CAACD,GAAG,CAACH,cAAJ,CAAmBK,CAAnB,CAAD,IAA0BF,GAAG,CAACE,CAAD,CAAH,KAAWD,GAAG,CAACC,CAAD,CAA5C,EAAiD;AAC/C,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["export * from './combine.js';\nexport * from './filter.js';\nexport * from './options.js';\nexport * from './exclude.js';\n\nexport interface ParamsAny {\n  // tslint:disable-next-line: no-any // Too annoying to force every test to type convert params\n  [k: string]: any;\n}\nexport type ParamAnyIterable = Iterable<ParamsAny>;\nexport type ParamAnyIterator = IterableIterator<ParamsAny>;\n\nexport type ParamArgument = undefined | boolean | number | string | number[];\nexport interface ParamsSpec {\n  [k: string]: ParamArgument;\n}\nexport type ParamSpecIterable = Iterable<ParamsSpec>;\nexport type ParamSpecIterator = IterableIterator<ParamsSpec>;\n\nexport function paramsEquals(x: ParamsSpec | null, y: ParamsSpec | null): boolean {\n  if (x === y) {\n    return true;\n  }\n  if (x === null || y === null) {\n    return false;\n  }\n\n  for (const xk of Object.keys(x)) {\n    if (!y.hasOwnProperty(xk)) {\n      return false;\n    }\n    if (x[xk] !== y[xk]) {\n      return false;\n    }\n  }\n\n  for (const yk of Object.keys(y)) {\n    if (!x.hasOwnProperty(yk)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function paramsSupersets(sup: ParamsSpec | null, sub: ParamsSpec | null): boolean {\n  if (sub === null) {\n    return true;\n  }\n  if (sup === null) {\n    // && sub !== undefined\n    return false;\n  }\n  for (const k of Object.keys(sub)) {\n    if (!sup.hasOwnProperty(k) || sup[k] !== sub[k]) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"file":"index.js"}